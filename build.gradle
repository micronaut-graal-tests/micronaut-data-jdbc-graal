plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.7.0"
}

version = "0.1"
group = "example.micronaut"

repositories {
    mavenCentral()
    maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots/" }
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("example.*")
    }
}

configurations {
    all {
        resolutionStrategy {
            eachDependency { DependencyResolveDetails details ->
                // specifying a fixed version for all libraries with 'io.micronaut.data' group
                if (details.requested.group == 'io.micronaut.data') {
                    details.useVersion micronautDataVersion
                }
            }
        }
    }
}

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")

    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.data:micronaut-data-jdbc")

    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.mariadb.jdbc:mariadb-java-client")
}

application {
    mainClass.set("example.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("1.8")
    targetCompatibility = JavaVersion.toVersion("1.8")
}
graalvmNative.toolchainDetection = false
graalvmNative {
    binaries {
        main {
            imageName.set('data-jdbc-mariadb')
        }
    }
}
